package com.bdx.rainbow.entity.ydzf;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

public class TYdzfComplaintExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected String suffix = "";

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected int limitClauseStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected int limitClauseCount = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public TYdzfComplaintExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void setSuffix(String suffix) {
        this.suffix = suffix;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public String getSuffix() {
        return suffix;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void setLimitClauseStart(int limitClauseStart) {
        this.limitClauseStart=limitClauseStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public int getLimitClauseStart() {
        return limitClauseStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public void setLimitClauseCount(int limitClauseCount) {
        this.limitClauseCount=limitClauseCount;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public int getLimitClauseCount() {
        return limitClauseCount;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andComplaintIdIsNull() {
            addCriterion("COMPLAINT_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintIdIsNotNull() {
            addCriterion("COMPLAINT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintIdEqualTo(Integer value) {
            addCriterion("COMPLAINT_ID =", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_ID <>", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdGreaterThan(Integer value) {
            addCriterion("COMPLAINT_ID >", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_ID >=", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdLessThan(Integer value) {
            addCriterion("COMPLAINT_ID <", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_ID <=", value, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdIn(List<Integer> values) {
            addCriterion("COMPLAINT_ID in", values, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_ID not in", values, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_ID between", value1, value2, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_ID not between", value1, value2, "complaintId");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeIsNull() {
            addCriterion("COMPLAINT_CODE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeIsNotNull() {
            addCriterion("COMPLAINT_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeEqualTo(String value) {
            addCriterion("COMPLAINT_CODE =", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeNotEqualTo(String value) {
            addCriterion("COMPLAINT_CODE <>", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeGreaterThan(String value) {
            addCriterion("COMPLAINT_CODE >", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_CODE >=", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeLessThan(String value) {
            addCriterion("COMPLAINT_CODE <", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_CODE <=", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeLike(String value) {
            addCriterion("COMPLAINT_CODE like", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeNotLike(String value) {
            addCriterion("COMPLAINT_CODE not like", value, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeIn(List<String> values) {
            addCriterion("COMPLAINT_CODE in", values, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeNotIn(List<String> values) {
            addCriterion("COMPLAINT_CODE not in", values, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeBetween(String value1, String value2) {
            addCriterion("COMPLAINT_CODE between", value1, value2, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintCodeNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_CODE not between", value1, value2, "complaintCode");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelIsNull() {
            addCriterion("COMPLAINT_CHANNEL is null");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelIsNotNull() {
            addCriterion("COMPLAINT_CHANNEL is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelEqualTo(Integer value) {
            addCriterion("COMPLAINT_CHANNEL =", value, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_CHANNEL <>", value, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelGreaterThan(Integer value) {
            addCriterion("COMPLAINT_CHANNEL >", value, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_CHANNEL >=", value, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelLessThan(Integer value) {
            addCriterion("COMPLAINT_CHANNEL <", value, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_CHANNEL <=", value, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelIn(List<Integer> values) {
            addCriterion("COMPLAINT_CHANNEL in", values, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_CHANNEL not in", values, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_CHANNEL between", value1, value2, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintChannelNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_CHANNEL not between", value1, value2, "complaintChannel");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdIsNull() {
            addCriterion("COMPLAINT_SOURCE_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdIsNotNull() {
            addCriterion("COMPLAINT_SOURCE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdEqualTo(Integer value) {
            addCriterion("COMPLAINT_SOURCE_ID =", value, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_SOURCE_ID <>", value, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdGreaterThan(Integer value) {
            addCriterion("COMPLAINT_SOURCE_ID >", value, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_SOURCE_ID >=", value, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdLessThan(Integer value) {
            addCriterion("COMPLAINT_SOURCE_ID <", value, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_SOURCE_ID <=", value, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdIn(List<Integer> values) {
            addCriterion("COMPLAINT_SOURCE_ID in", values, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_SOURCE_ID not in", values, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_SOURCE_ID between", value1, value2, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintSourceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_SOURCE_ID not between", value1, value2, "complaintSourceId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdIsNull() {
            addCriterion("COMPLAINT_CREAT_DEP_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdIsNotNull() {
            addCriterion("COMPLAINT_CREAT_DEP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_DEP_ID =", value, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_DEP_ID <>", value, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdGreaterThan(Integer value) {
            addCriterion("COMPLAINT_CREAT_DEP_ID >", value, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_DEP_ID >=", value, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdLessThan(Integer value) {
            addCriterion("COMPLAINT_CREAT_DEP_ID <", value, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_DEP_ID <=", value, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdIn(List<Integer> values) {
            addCriterion("COMPLAINT_CREAT_DEP_ID in", values, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_CREAT_DEP_ID not in", values, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_CREAT_DEP_ID between", value1, value2, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDepIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_CREAT_DEP_ID not between", value1, value2, "complaintCreatDepId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdIsNull() {
            addCriterion("COMPLAINT_CREAT_USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdIsNotNull() {
            addCriterion("COMPLAINT_CREAT_USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_USER_ID =", value, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_USER_ID <>", value, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdGreaterThan(Integer value) {
            addCriterion("COMPLAINT_CREAT_USER_ID >", value, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_USER_ID >=", value, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdLessThan(Integer value) {
            addCriterion("COMPLAINT_CREAT_USER_ID <", value, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_CREAT_USER_ID <=", value, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdIn(List<Integer> values) {
            addCriterion("COMPLAINT_CREAT_USER_ID in", values, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_CREAT_USER_ID not in", values, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_CREAT_USER_ID between", value1, value2, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_CREAT_USER_ID not between", value1, value2, "complaintCreatUserId");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateIsNull() {
            addCriterion("COMPLAINT_CREAT_DATE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateIsNotNull() {
            addCriterion("COMPLAINT_CREAT_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_CREAT_DATE =", value, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateNotEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_CREAT_DATE <>", value, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateGreaterThan(Timestamp value) {
            addCriterion("COMPLAINT_CREAT_DATE >", value, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_CREAT_DATE >=", value, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateLessThan(Timestamp value) {
            addCriterion("COMPLAINT_CREAT_DATE <", value, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateLessThanOrEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_CREAT_DATE <=", value, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateIn(List<Timestamp> values) {
            addCriterion("COMPLAINT_CREAT_DATE in", values, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateNotIn(List<Timestamp> values) {
            addCriterion("COMPLAINT_CREAT_DATE not in", values, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateBetween(Timestamp value1, Timestamp value2) {
            addCriterion("COMPLAINT_CREAT_DATE between", value1, value2, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintCreatDateNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("COMPLAINT_CREAT_DATE not between", value1, value2, "complaintCreatDate");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeIsNull() {
            addCriterion("COMPLAINT_UNIT_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeIsNotNull() {
            addCriterion("COMPLAINT_UNIT_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeEqualTo(Integer value) {
            addCriterion("COMPLAINT_UNIT_TYPE =", value, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_UNIT_TYPE <>", value, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeGreaterThan(Integer value) {
            addCriterion("COMPLAINT_UNIT_TYPE >", value, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_UNIT_TYPE >=", value, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeLessThan(Integer value) {
            addCriterion("COMPLAINT_UNIT_TYPE <", value, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_UNIT_TYPE <=", value, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeIn(List<Integer> values) {
            addCriterion("COMPLAINT_UNIT_TYPE in", values, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_UNIT_TYPE not in", values, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_UNIT_TYPE between", value1, value2, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_UNIT_TYPE not between", value1, value2, "complaintUnitType");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitIsNull() {
            addCriterion("COMPLAINT_UNIT is null");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitIsNotNull() {
            addCriterion("COMPLAINT_UNIT is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitEqualTo(String value) {
            addCriterion("COMPLAINT_UNIT =", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitNotEqualTo(String value) {
            addCriterion("COMPLAINT_UNIT <>", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitGreaterThan(String value) {
            addCriterion("COMPLAINT_UNIT >", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_UNIT >=", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitLessThan(String value) {
            addCriterion("COMPLAINT_UNIT <", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_UNIT <=", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitLike(String value) {
            addCriterion("COMPLAINT_UNIT like", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitNotLike(String value) {
            addCriterion("COMPLAINT_UNIT not like", value, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitIn(List<String> values) {
            addCriterion("COMPLAINT_UNIT in", values, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitNotIn(List<String> values) {
            addCriterion("COMPLAINT_UNIT not in", values, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitBetween(String value1, String value2) {
            addCriterion("COMPLAINT_UNIT between", value1, value2, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintUnitNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_UNIT not between", value1, value2, "complaintUnit");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerIsNull() {
            addCriterion("COMPLAINT_INFORMER is null");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerIsNotNull() {
            addCriterion("COMPLAINT_INFORMER is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerEqualTo(String value) {
            addCriterion("COMPLAINT_INFORMER =", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerNotEqualTo(String value) {
            addCriterion("COMPLAINT_INFORMER <>", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerGreaterThan(String value) {
            addCriterion("COMPLAINT_INFORMER >", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_INFORMER >=", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerLessThan(String value) {
            addCriterion("COMPLAINT_INFORMER <", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_INFORMER <=", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerLike(String value) {
            addCriterion("COMPLAINT_INFORMER like", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerNotLike(String value) {
            addCriterion("COMPLAINT_INFORMER not like", value, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerIn(List<String> values) {
            addCriterion("COMPLAINT_INFORMER in", values, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerNotIn(List<String> values) {
            addCriterion("COMPLAINT_INFORMER not in", values, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerBetween(String value1, String value2) {
            addCriterion("COMPLAINT_INFORMER between", value1, value2, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintInformerNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_INFORMER not between", value1, value2, "complaintInformer");
            return (Criteria) this;
        }

        public Criteria andComplaintNameIsNull() {
            addCriterion("COMPLAINT_NAME is null");
            return (Criteria) this;
        }

        public Criteria andComplaintNameIsNotNull() {
            addCriterion("COMPLAINT_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintNameEqualTo(String value) {
            addCriterion("COMPLAINT_NAME =", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameNotEqualTo(String value) {
            addCriterion("COMPLAINT_NAME <>", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameGreaterThan(String value) {
            addCriterion("COMPLAINT_NAME >", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_NAME >=", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameLessThan(String value) {
            addCriterion("COMPLAINT_NAME <", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_NAME <=", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameLike(String value) {
            addCriterion("COMPLAINT_NAME like", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameNotLike(String value) {
            addCriterion("COMPLAINT_NAME not like", value, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameIn(List<String> values) {
            addCriterion("COMPLAINT_NAME in", values, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameNotIn(List<String> values) {
            addCriterion("COMPLAINT_NAME not in", values, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameBetween(String value1, String value2) {
            addCriterion("COMPLAINT_NAME between", value1, value2, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintNameNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_NAME not between", value1, value2, "complaintName");
            return (Criteria) this;
        }

        public Criteria andComplaintContentIsNull() {
            addCriterion("COMPLAINT_CONTENT is null");
            return (Criteria) this;
        }

        public Criteria andComplaintContentIsNotNull() {
            addCriterion("COMPLAINT_CONTENT is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintContentEqualTo(String value) {
            addCriterion("COMPLAINT_CONTENT =", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentNotEqualTo(String value) {
            addCriterion("COMPLAINT_CONTENT <>", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentGreaterThan(String value) {
            addCriterion("COMPLAINT_CONTENT >", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_CONTENT >=", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentLessThan(String value) {
            addCriterion("COMPLAINT_CONTENT <", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_CONTENT <=", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentLike(String value) {
            addCriterion("COMPLAINT_CONTENT like", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentNotLike(String value) {
            addCriterion("COMPLAINT_CONTENT not like", value, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentIn(List<String> values) {
            addCriterion("COMPLAINT_CONTENT in", values, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentNotIn(List<String> values) {
            addCriterion("COMPLAINT_CONTENT not in", values, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentBetween(String value1, String value2) {
            addCriterion("COMPLAINT_CONTENT between", value1, value2, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andComplaintContentNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_CONTENT not between", value1, value2, "complaintContent");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeIsNull() {
            addCriterion("ENTERPRISE_BUSINESS_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeIsNotNull() {
            addCriterion("ENTERPRISE_BUSINESS_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeEqualTo(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE =", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeNotEqualTo(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE <>", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeGreaterThan(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE >", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeGreaterThanOrEqualTo(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE >=", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeLessThan(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE <", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeLessThanOrEqualTo(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE <=", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeLike(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE like", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeNotLike(String value) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE not like", value, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeIn(List<String> values) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE in", values, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeNotIn(List<String> values) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE not in", values, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeBetween(String value1, String value2) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE between", value1, value2, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andEnterpriseBusinessTypeNotBetween(String value1, String value2) {
            addCriterion("ENTERPRISE_BUSINESS_TYPE not between", value1, value2, "enterpriseBusinessType");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdIsNull() {
            addCriterion("COMPLAINT_ENTERPRISE_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdIsNotNull() {
            addCriterion("COMPLAINT_ENTERPRISE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdEqualTo(Integer value) {
            addCriterion("COMPLAINT_ENTERPRISE_ID =", value, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_ENTERPRISE_ID <>", value, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdGreaterThan(Integer value) {
            addCriterion("COMPLAINT_ENTERPRISE_ID >", value, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_ENTERPRISE_ID >=", value, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdLessThan(Integer value) {
            addCriterion("COMPLAINT_ENTERPRISE_ID <", value, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_ENTERPRISE_ID <=", value, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdIn(List<Integer> values) {
            addCriterion("COMPLAINT_ENTERPRISE_ID in", values, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_ENTERPRISE_ID not in", values, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_ENTERPRISE_ID between", value1, value2, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintEnterpriseIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_ENTERPRISE_ID not between", value1, value2, "complaintEnterpriseId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdIsNull() {
            addCriterion("COMPLAINT_SKU_ID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdIsNotNull() {
            addCriterion("COMPLAINT_SKU_ID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdEqualTo(Integer value) {
            addCriterion("COMPLAINT_SKU_ID =", value, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_SKU_ID <>", value, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdGreaterThan(Integer value) {
            addCriterion("COMPLAINT_SKU_ID >", value, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_SKU_ID >=", value, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdLessThan(Integer value) {
            addCriterion("COMPLAINT_SKU_ID <", value, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_SKU_ID <=", value, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdIn(List<Integer> values) {
            addCriterion("COMPLAINT_SKU_ID in", values, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_SKU_ID not in", values, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_SKU_ID between", value1, value2, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintSkuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_SKU_ID not between", value1, value2, "complaintSkuId");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusIsNull() {
            addCriterion("COMPLAINT_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusIsNotNull() {
            addCriterion("COMPLAINT_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusEqualTo(Integer value) {
            addCriterion("COMPLAINT_STATUS =", value, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_STATUS <>", value, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusGreaterThan(Integer value) {
            addCriterion("COMPLAINT_STATUS >", value, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_STATUS >=", value, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusLessThan(Integer value) {
            addCriterion("COMPLAINT_STATUS <", value, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_STATUS <=", value, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusIn(List<Integer> values) {
            addCriterion("COMPLAINT_STATUS in", values, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_STATUS not in", values, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_STATUS between", value1, value2, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_STATUS not between", value1, value2, "complaintStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridIsNull() {
            addCriterion("COMPLAINT_AUDIT_USERID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridIsNotNull() {
            addCriterion("COMPLAINT_AUDIT_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridEqualTo(Integer value) {
            addCriterion("COMPLAINT_AUDIT_USERID =", value, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_AUDIT_USERID <>", value, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridGreaterThan(Integer value) {
            addCriterion("COMPLAINT_AUDIT_USERID >", value, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_AUDIT_USERID >=", value, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridLessThan(Integer value) {
            addCriterion("COMPLAINT_AUDIT_USERID <", value, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_AUDIT_USERID <=", value, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridIn(List<Integer> values) {
            addCriterion("COMPLAINT_AUDIT_USERID in", values, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_AUDIT_USERID not in", values, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_AUDIT_USERID between", value1, value2, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_AUDIT_USERID not between", value1, value2, "complaintAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateIsNull() {
            addCriterion("COMPLAINT_AUDIT_DATE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateIsNotNull() {
            addCriterion("COMPLAINT_AUDIT_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_AUDIT_DATE =", value, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateNotEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_AUDIT_DATE <>", value, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateGreaterThan(Timestamp value) {
            addCriterion("COMPLAINT_AUDIT_DATE >", value, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_AUDIT_DATE >=", value, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateLessThan(Timestamp value) {
            addCriterion("COMPLAINT_AUDIT_DATE <", value, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateLessThanOrEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_AUDIT_DATE <=", value, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateIn(List<Timestamp> values) {
            addCriterion("COMPLAINT_AUDIT_DATE in", values, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateNotIn(List<Timestamp> values) {
            addCriterion("COMPLAINT_AUDIT_DATE not in", values, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateBetween(Timestamp value1, Timestamp value2) {
            addCriterion("COMPLAINT_AUDIT_DATE between", value1, value2, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditDateNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("COMPLAINT_AUDIT_DATE not between", value1, value2, "complaintAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceIsNull() {
            addCriterion("COMPLAINT_AUDIT_ADVICE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceIsNotNull() {
            addCriterion("COMPLAINT_AUDIT_ADVICE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceEqualTo(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE =", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceNotEqualTo(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE <>", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceGreaterThan(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE >", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE >=", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceLessThan(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE <", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE <=", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceLike(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE like", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceNotLike(String value) {
            addCriterion("COMPLAINT_AUDIT_ADVICE not like", value, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceIn(List<String> values) {
            addCriterion("COMPLAINT_AUDIT_ADVICE in", values, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceNotIn(List<String> values) {
            addCriterion("COMPLAINT_AUDIT_ADVICE not in", values, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceBetween(String value1, String value2) {
            addCriterion("COMPLAINT_AUDIT_ADVICE between", value1, value2, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintAuditAdviceNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_AUDIT_ADVICE not between", value1, value2, "complaintAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusIsNull() {
            addCriterion("COMPLAINT_INSPECT_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusIsNotNull() {
            addCriterion("COMPLAINT_INSPECT_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_STATUS =", value, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_STATUS <>", value, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusGreaterThan(Integer value) {
            addCriterion("COMPLAINT_INSPECT_STATUS >", value, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_STATUS >=", value, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusLessThan(Integer value) {
            addCriterion("COMPLAINT_INSPECT_STATUS <", value, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_STATUS <=", value, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusIn(List<Integer> values) {
            addCriterion("COMPLAINT_INSPECT_STATUS in", values, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_INSPECT_STATUS not in", values, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_INSPECT_STATUS between", value1, value2, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_INSPECT_STATUS not between", value1, value2, "complaintInspectStatus");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridIsNull() {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID is null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridIsNotNull() {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID =", value, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridNotEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID <>", value, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridGreaterThan(Integer value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID >", value, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID >=", value, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridLessThan(Integer value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID <", value, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridLessThanOrEqualTo(Integer value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID <=", value, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridIn(List<Integer> values) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID in", values, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridNotIn(List<Integer> values) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID not in", values, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID between", value1, value2, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_USERID not between", value1, value2, "complaintInspectAuditUserid");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateIsNull() {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateIsNotNull() {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE =", value, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateNotEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE <>", value, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateGreaterThan(Timestamp value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE >", value, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE >=", value, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateLessThan(Timestamp value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE <", value, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateLessThanOrEqualTo(Timestamp value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE <=", value, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateIn(List<Timestamp> values) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE in", values, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateNotIn(List<Timestamp> values) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE not in", values, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateBetween(Timestamp value1, Timestamp value2) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE between", value1, value2, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditDateNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_DATE not between", value1, value2, "complaintInspectAuditDate");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceIsNull() {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE is null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceIsNotNull() {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceEqualTo(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE =", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceNotEqualTo(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE <>", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceGreaterThan(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE >", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceGreaterThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE >=", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceLessThan(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE <", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceLessThanOrEqualTo(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE <=", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceLike(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE like", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceNotLike(String value) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE not like", value, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceIn(List<String> values) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE in", values, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceNotIn(List<String> values) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE not in", values, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceBetween(String value1, String value2) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE between", value1, value2, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andComplaintInspectAuditAdviceNotBetween(String value1, String value2) {
            addCriterion("COMPLAINT_INSPECT_AUDIT_ADVICE not between", value1, value2, "complaintInspectAuditAdvice");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andIsDelIsNull() {
            addCriterion("IS_DEL is null");
            return (Criteria) this;
        }

        public Criteria andIsDelIsNotNull() {
            addCriterion("IS_DEL is not null");
            return (Criteria) this;
        }

        public Criteria andIsDelEqualTo(String value) {
            addCriterion("IS_DEL =", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelNotEqualTo(String value) {
            addCriterion("IS_DEL <>", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelGreaterThan(String value) {
            addCriterion("IS_DEL >", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelGreaterThanOrEqualTo(String value) {
            addCriterion("IS_DEL >=", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelLessThan(String value) {
            addCriterion("IS_DEL <", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelLessThanOrEqualTo(String value) {
            addCriterion("IS_DEL <=", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelLike(String value) {
            addCriterion("IS_DEL like", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelNotLike(String value) {
            addCriterion("IS_DEL not like", value, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelIn(List<String> values) {
            addCriterion("IS_DEL in", values, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelNotIn(List<String> values) {
            addCriterion("IS_DEL not in", values, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelBetween(String value1, String value2) {
            addCriterion("IS_DEL between", value1, value2, "isDel");
            return (Criteria) this;
        }

        public Criteria andIsDelNotBetween(String value1, String value2) {
            addCriterion("IS_DEL not between", value1, value2, "isDel");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("CREATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Timestamp value) {
            addCriterion("CREATE_DATE =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Timestamp value) {
            addCriterion("CREATE_DATE <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Timestamp value) {
            addCriterion("CREATE_DATE >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("CREATE_DATE >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Timestamp value) {
            addCriterion("CREATE_DATE <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Timestamp value) {
            addCriterion("CREATE_DATE <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Timestamp> values) {
            addCriterion("CREATE_DATE in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Timestamp> values) {
            addCriterion("CREATE_DATE not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Timestamp value1, Timestamp value2) {
            addCriterion("CREATE_DATE between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("CREATE_DATE not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateUseridIsNull() {
            addCriterion("CREATE_USERID is null");
            return (Criteria) this;
        }

        public Criteria andCreateUseridIsNotNull() {
            addCriterion("CREATE_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUseridEqualTo(Integer value) {
            addCriterion("CREATE_USERID =", value, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridNotEqualTo(Integer value) {
            addCriterion("CREATE_USERID <>", value, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridGreaterThan(Integer value) {
            addCriterion("CREATE_USERID >", value, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("CREATE_USERID >=", value, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridLessThan(Integer value) {
            addCriterion("CREATE_USERID <", value, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridLessThanOrEqualTo(Integer value) {
            addCriterion("CREATE_USERID <=", value, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridIn(List<Integer> values) {
            addCriterion("CREATE_USERID in", values, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridNotIn(List<Integer> values) {
            addCriterion("CREATE_USERID not in", values, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_USERID between", value1, value2, "createUserid");
            return (Criteria) this;
        }

        public Criteria andCreateUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("CREATE_USERID not between", value1, value2, "createUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(Timestamp value) {
            addCriterion("UPDATE_DATE =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(Timestamp value) {
            addCriterion("UPDATE_DATE <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(Timestamp value) {
            addCriterion("UPDATE_DATE >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Timestamp value) {
            addCriterion("UPDATE_DATE >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(Timestamp value) {
            addCriterion("UPDATE_DATE <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Timestamp value) {
            addCriterion("UPDATE_DATE <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<Timestamp> values) {
            addCriterion("UPDATE_DATE in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<Timestamp> values) {
            addCriterion("UPDATE_DATE not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(Timestamp value1, Timestamp value2) {
            addCriterion("UPDATE_DATE between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(Timestamp value1, Timestamp value2) {
            addCriterion("UPDATE_DATE not between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridIsNull() {
            addCriterion("UPDATE_USERID is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridIsNotNull() {
            addCriterion("UPDATE_USERID is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridEqualTo(Integer value) {
            addCriterion("UPDATE_USERID =", value, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridNotEqualTo(Integer value) {
            addCriterion("UPDATE_USERID <>", value, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridGreaterThan(Integer value) {
            addCriterion("UPDATE_USERID >", value, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("UPDATE_USERID >=", value, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridLessThan(Integer value) {
            addCriterion("UPDATE_USERID <", value, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridLessThanOrEqualTo(Integer value) {
            addCriterion("UPDATE_USERID <=", value, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridIn(List<Integer> values) {
            addCriterion("UPDATE_USERID in", values, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridNotIn(List<Integer> values) {
            addCriterion("UPDATE_USERID not in", values, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridBetween(Integer value1, Integer value2) {
            addCriterion("UPDATE_USERID between", value1, value2, "updateUserid");
            return (Criteria) this;
        }

        public Criteria andUpdateUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("UPDATE_USERID not between", value1, value2, "updateUserid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_ydzf_complaint
     *
     * @mbggenerated Sat Apr 16 01:14:22 GMT+08:00 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}